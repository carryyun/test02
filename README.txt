[*전체*]
코드에 문제점 발견시 주석으로 *해결필요* 달아놓기
다음버전에서 삭제해야 하는것들은 *삭제* 달아놓기

[공통CSS 중요 수정내역]
부트스트랩 CSS에 .colmar-md추가 기존col-md에서 -15px만큼 뺀 크기
부트스트랩 com-md-8 66.6666666667%을 66.669%로 수정. infoToggle의 체결그래프 오른쪽이 살짝 덜채워짐.
global    mt-10 mb-10 ml-10 mr-10 추가 각 방향에 margin을 10px씩 주는 클래스
global    pt-10 pb-10 pl-10 pr-10 추가 각 방향에 padding을 10px씩 주는 클래스


https://milkoon1.tistory.com/33 - IT 개발구조 총정리 - 프론트엔드와 백엔드 (백, 프론트엔트에 각각 어떤기술들이 필요한지)
내가 구현한 방식을 항상 왜 이방식을 사용했는지 설명할 수 있어야함

내가 모르는게 뭔지 알아보고 차례대로 공부해야함
*필수(람다식, 컬렉션 , 스트림) , (면접시 document질문도 많이함)* upbitTest12에 Ele15 복습
 https://primefaces.org/

웹소켓( webSocket.binaryType , 수신값에 Uint8Array사용 , TextDecoder ), , 쓰레드, 쓰레드풀, 크론, MVC라는게 정확히 뭔지
솔리드원칙, 서버사이드렌더링/클라이언트 사이드 렌더링 , 워커, 마샬링(=모델링), lodash, Enums
React Developer Tools(데브툴 확장 깔고 개발자 모드 켜고 위치 접속하면 페이지 이동시나 이벤트 발생시 바뀌는 요소들이 테두리로 표현되거든요
이거 보면 아마 리액트나 뷰 쓰는 이유 확 이해 갈거예요)
스프링MVC(https://www.youtube.com/user/eyeholys)

FIXME, TODO등 주석을 다는 형식도 있음(https://drunkenma.tistory.com/6)(https://devilbbong.tistory.com/13)

[ *해결완료* == FIXED ]
FIXED* 전체코인 목록 작업 => 목록만 추가해둠. 내용을 추가해야하는데 한번에 값을받으면 업비트API가 block당함
               - 시간차를 두고 전체목록도 즐겨찾기와 동일한 항목으로 출력해보려했으나 역시 API로 보낸 요청이 거부당함
                 ticker를 이용해 현재가, 전일대비 상승%, 거래량등으로 내용을 수정해서 출력해야할 것 같음.
               => 웹소캣을 이용하면 요청갯수에 제한이없음. REST->웹소캣 변경완료
FIXED* 첫번째 아이템을 삭제해도 코인상세정보는 바뀌지않음. (2가지 방법중 선택할것)
    - 1. 코인상세정보를 그 다음코인으로 바꿔주던가
    - 2. 테이블과 아이템의 getTrade가 따로 돌아가게 코딩되어있는지 확인해보던가
    => 웹소캣으로 데이터를 받고부터 실시간갱신으로 변경됨 상관없어짐.
FIXED 검색기능 작동안함 coinItem의 ID지정이 문제임 아이템 추가시 전체목록과 즐겨찾기의 아이디숫자를 공유할때 생긴 문제. i값을 조정해줘야함.
 => 작동할 List에있는 아이템의 첫번째, 마지막 id를 참고해 검색하도록 변경 ex.전체목록 coin1부터 coin116 => 1~116
FIXED*고민* ajax를 통해 업비트 데이터를 받아오는 함수는 자바스크립트에 있는게 맞는지? 컨트롤러에 있는게 맞는지?
 => 웹소캣으로 변경 jsp에 넣어놓기로함
FIXED21-05-10 코인정보를 담는 Coin클래스를 추가함.
              1. 이미 만들어둔 FavoriteCoin클래스 외에 거래볼륨 데이터를 어디에 추가할지?
 => coinData와 tradeData클래스를 새로 만들어서 저장함
  - coinData(code,kr_name,bidVolume,aksVolume,totalVolume, tradeArr[]:tradeData) 사용할 포멧에 맞도록 코인의 정보를 저장
  - tradeData(id,time,askbid,price,volume) coinData의 tradeArr에 저장되는 체결내역
FIXED21-05-11 코인 상세정보 패널 거래량그래프의 col을 1~2정도 줄이고 옵션을 설정할 수 있는 패널 추가할지?
 => 첫번째 기능으로는 즐겨찾기버튼 추가, 나머지는 미정
FIXED21-05-11 getTrade나 setItem setUpbitData중 선택해 API가 호출되는 시간에 차이 줘야할것같음 > 짧은시간에 많은요청은 block됨.
 => 웹소캣으로 변경 후 요청제한 갯수가 없어짐.
FIXED21-05-11 아이템이 삭제되었는데도 삭제된 아이템에 대해 한번 실행되는 문제가 있음. setTimeout의 작동순서를 확인해봐야할것같음
              이것도 코인별로 타이머를 만들어야할지?
 => 웹소캣으로 변경 후 setTimeout을 모두 제거함


[ *해결해야할 문제* == FIXME ]
FIXME 마켓뎁스 클릭시 해당코인으로 변경시켜야함
 - *해결필요* 임시작성, 비로그인일시 코인상세정보에 BTC로 설정을해둠 => 이마저도 에러뜸 주석처리 해뒀으니 수정해야함
 - *해결필요* 체결량을 일정주기마다 초기화 시켜줘야 추세의 변화가 더 확실하게 보일 것 같음. [21-05-06] 기초는 잡아둠
 - *해결필요* 차트가 조회 시점까지의 정보만 출력되므로 실시간정보도 추가 필요할 것 같음. chart관련 DTO도 새로만들어야할지
 - *해결필요* 화면갱신할때 볼륨소수점표시를 임시방편으로 if BTC || price>1000000 을 사용해서 작동은 시켜놨으나 수정해야 할지도..?
 FIXME로그인페이지 다듬기

[ *추가할지 고민* ]
- *고민* 현재 리스트의 아이템들도 데이터가 들어올때마다 갱신시켜주는데 Worker를 이용해야할지?
- *고민* coin에 burn()에서 삭제되지 않는 누적체결볼륨을 추가해 설정에따라 삭제되는 누적볼륨or삭제없이 계속 쌓이게할지 선택?
- *고민* burn()에서 삭제되는 주기와 수치조절
- *고민* 마켓뎁스까지 추가할지?
- *고민* *마지막작업* js를 분리시켜야할 것 같고, 또한 서비스, 컨트롤러에서 해결할 수 있는 문제들도 js에서 분리시켜야 할 것같음.


[ 21-05-14 작업내역 ]
npm을 이용해 node_modules를 install. 현재 프로젝트에서도 React 사용이 가능해짐
FIXME coinList, coinListAll 리액트로 구현
 - Map형식 데이터를 받음. Map의 values메소드로 값만 뽑아 Array.from으로 변수에 저장한 뒤, Array의 map 메소드를 활용해 React에 활용함
 - window.setDatamap = setDatamap; useState에서 setter에 해당하는 함수를 전역함수로(?) 저장한 뒤 워커로 리랜더링.(정석은 아닌듯함)
 - FIXME onMouseEnter, onClick을 마저 구현해야함, 매개변수로 값을 넘겨주는법, 로드시 바로 실행되는문제 등 해결해야함
   그 후 React에서 원하는 DOM을 선택해 제어하는법도 알아야함(ref같음)


[ 21-05-12 작업내역 ]

tabManager 클래스 추가 (ES6형식)
 - 클래스변수를 선언할때는 생성자 안에 this.필드명 = "내용"으로 => constructor(){ 내용 } 
 - 클래스 메소드에서 클래스변수를 사용할때는 this.필드명 으로 사용
 - 메소드
   showAll(tabIndex) 지정한 tabIndex의 아이템을 다 block으로 설정한다.



[ 21-05-11 작업내역 ]
FIXED* 리스트를 클릭했을때 한번이상의 거래가 있어야 정보를 받아오면서 바뀌게 됨.
 - 클릭한 당시에 내용이 바뀌도록 해야함. REST로 데이터를 받던가, 스냅샷으로 바로 데이터를 뽑아오던가.
 => setInfoText(code) 함수 추가. 이 함수는 open high low가격정보와 코인이름, 즐겨찾기 여부를 갱신시킨다.

FIXED* 기존에 화면을 갱신, 업데이트 함수 제거 => setInfoText, itemClick, setInfoData, setCoinData, updateItem, addItem 함수 추가
 =>   const tabPage= [ $('#coinListAll'), $('#coinList') ]
      setCoinData(data)       - 웹소캣으로 받은 data를 coinData객체에 넣어서 coinDataMap에 저장한다. key값은 marketCode(ex. KRW-BTC 등...)
      updateItem(coindata,tabIndex) - coindata객체 / tabIndex: 0=전체목록 1=즐겨찾기 리스트의 그래프를 갱신시키는 함수
      addItem(tabIndex)       - tabIndex: 0=전체목록 1=즐겨찾기. 리스트에 아이템을 추가하는 함수
      setInfoData(coindata)   - coindata객체 코인상세정보(그래프,테이블 등)을 갱신시키는 함수
      setInfoText(code)       - code:XRP,BTC... open high low가격정보와 코인이름, 즐겨찾기 여부를 갱신
      itemClick(item)         - item 리스트의 아이템. setInfoText와initChart(coinName : BTC,XRP 등..)를 호출한다

삭제함수 수정 removeItem(item, e) arguments.length를 통해 자바스크립트에서도 오버로딩을 구현할 수 있음
 - 상세정보의 즐겨찾기 버튼으로 삭제하면 item만 넘겨주기때문에 arguments.length==1 이 작동
   즐겨찾기 리스트에서 휴지통버튼으로 삭제시 arguments.length==2가 작동
즐겨찾기 버튼 추가
 - 추가는 즐겨찾기 목록인 initListName에 push, addItem(1)을 실행해 즐겨찾기탭에 아이템추가
FIXED21-05-12 FIXME 검색기능 작동안함
 - coinItem의 ID지정이 문제임 아이템 추가시 전체목록과 즐겨찾기의 아이디숫자를 공유할때 생긴 문제. i값을 조정해줘야함


[ 21-05-10 작업내역 ]
** 업비트 데이터 받는 방식을 REST>웹소켓 => 웹소켓의 장점 = 실시간으로 정보를 계속 받아볼 수 있으면서도 업비트 요청갯수제한이 없음.
 - function getUpbitData(coinName, cnt, reqType)
   coinName : 코인이름 형식 ex) BTT, XRP, QUTM
   cnt : 받아올 내역의 갯수 ex) BTT체결내역 10개를 원하면 10, XRP ticker 1개는 1
   reqType : 요청타입 ticker(코인정보), trade(체결내역), orderbook(호가) 
 - 전체적인 구조의 변경이 필요함
   현재 => 과거의 체결내역을 일정 갯수만큼 조회해서 배열을 받아와 중복체크를 하며 데이터를 출력했음.
   변경 => 코인의 정보가 담길 객체(클래스)를 하나 만들고 데이터가 들어올때마다 저장하고 화면을 업데이트 시키는 방식으로 변경해야함.
            - 상세정보같은 경우는 테이블에 체결된 가격과 볼륨 시간등이 출력되므로 데이터가 들어올 때 마다 업데이트 함수를 같이 호출한다.
            - 그래프는 일정시간마다 정보가 담긴 맵에서 각각의 코인별 정보를 꺼내서 출력시켜주는 방식이므로 일정시간마다 업데이트 함수를 호출
            => 요약 : 상세정보-데이터가 들어올때마다, 그래프(리스트)-일정시간마다

Worker를 이용하면 일정시간마다 함수를 실행하기위해 setTimeout을 사용하지 않아도 됨.

[21-05-10] 구조 대규모 변경===================================================================================================
이유 : 웹소켓과 Worker를 이용하면 보다 효율적으로 현재의 내용이 구동 가능해짐.
현재까지의 코드의 구조가 잘못되어 변경이 필요함.
1. setUpbitData,setItem, addListItem, addListItemAll, burn ... setTimeout없이 Worker를 이용하면 일정시간마다 호출 할 수 있음.
2. Rest API를 사용할땐 요청갯수에 제한이 있어서 억지로 출력내용을 수정하는 등 문제가있었지만 웹소캣을 이용하게된다면 요청갯수에 제한이없음
3. 웹소캣을 이용하게 되면서 함수마다 RestAPI를 호출해서 데이터를 받아 출력하는 등.. 구조적인 문제가 많이 발견됨.
4. addListItem, addListItemAll / addItem, addItemAll *전체목록과 즐겨찾기목록에 구분해* 출력하기위해 복사한 함수라 중복된 내용이 많음.
5. 체결내역을 저장하는 배열을 따로 운용해야할지?
코인{
   이름
   총거래량
   매수거래량
   매도거래량
   체결내역[] - 체결ID, 가격, 볼륨, 시간, ASKBID
}

계획
1. 화면업데이트하는 함수마다 RestAPI를 호출하지않고 매개변수로 데이터를 받거나, 받은 데이터를 미리 Map에 저장해놓고,
Map에서 데이터를 꺼내 이를 이용해서 출력하는방식
2. addListItem, addListItemAll / addItem, addItemAll 단순히 복사한 함수들 정리
function coinData(){
		code		="";
		kr_name		="";
		bidVolume	="";
		askVolume	="";
		totalVolume	="";
		// tradeData가 들어감
		tradeArr	= new Array();
}
let coinDataMap= new Map();
function tradeData(){
   id="";
	time="";
	askbid="";
	price="";
	volume="";
}
==============================================================================================================================
전체목록 출력내용 수정(웹소켓으로 변경시 요청에 제한이 없음 따라서 수정할 필요없음)




[ 21-05-09 작업내역 ]
배열형식에 담겨있는 JSON파싱방법 ( 형식Ex. [ {"name":"aaa"} , {"name":"bbb"} ] )
- jackson의 TypeReference를 이용해 리스트에 저장한 뒤 보내는 방식을 이용했음
   => List<사용할 Class> = mapper.readValue('배열이 담긴 문자열', new TypeReference<List<'사용할 Class'>>(){ });

FIXED* 전체코인 목록 작업
 - 전체 코인목록 DB에 저장, 코인리스트는 전체코인과 즐겨찾기로 구성
 - 전체목록의 리스트는 아직 이름만 설정해뒀음. 내용을 추가해야하는데 한번에 값을받으면 업비트API가 block당함
    1. 즐겨찾기와는 다른 내용을 채우던가 2. 즐겨찾기보다 내용을 간소화하고 컨트롤러에서 API로 값을 받고 DB에 저장후 불러오는식으로?

로그인기능
 - 로그인까지는 완료 / sessionScope 비우는 법을 몰라서 컨트롤러에서 컨트롤러에서 session의 curUser를 비우는방식으로 로그아웃 구현예정
 - 유저의 코인 즐겨찾기를 불러올때 session에서 curUser를꺼내 (UserAccount)로 cast하려는데 에러가발생함 => json형태로 꺼내졌음
   curUser를 toString으로 가져와서 아래코드를 이용햇음.
 - getUser = mapper.readValue(session.getAttribute("curUser").toString(), UserAccount.class);

*해결필요* 임시로 비로그인일시 코인상세정보 BTC로 설정을해둠 => 이마저도 에러뜸. 주석처리 해뒀으니 수정해야함


[ 21-05-07 작업내역 ]
*[21-05-07]해결완료* 체결내역ID 맵으로 변경해야하는이유 => 코인별로 리스트를 따로 사용하게 해야 정확하게 구분이 가능함.
 - askIdMap과 bidIdMap을 추가. 공통된Array에서 코인별로 체결ID를 저장하는 방식으로 수정완료.

*[21-05-07]해결완료* 코인리스트 검색 기능
 - 작업완료

*[21-05-07]해결완료* 리스트의 아이템 삭제기능
 - tradeTimerMap, updateTimerMap 두개의 Map에서 get(코인명)으로 삭제해서 타이머를 멈췄고, DB에서 값도 삭제되도록 완성.

테스트용도로 리스트에 아이템을 추가하는 함수를 만들어둠
 - 작업완료 > ajax를 이용함.
 - ajax -> Post를이용해 컨트롤러로 보낼때 컨트롤러에서 @ResponseBody를 안해주면 404에러가 발생함.

[ 21-05-06 작업내역 ]
코인 상세정보, 코인리스트 그리드 보기좋게 수정
 - 작업완료

코인상세정보에 코인의 시작,고가,저가 추가 / 상세정보 체결그래프 볼륨레이블을 그래프와 겹치게 배치 /
리스트는 퍼센트 레이블로 겹치게
 - 업비트API의 Ticker를 이용해 코인상세정보에 필요한 코인가격의 세부정보를 가져옴.
 - 추후 실시간 차트추가에도 사용될 API같음.

차트의 캔들과 stroke(캔들 외곽선)의 색상을 통일.
 - 작업완료

전체 코인의 현재 누적된 체결볼륨을 일정분량씩 소각시킴.
 - 단기간 체결내역의 매수,매도 퍼센트를 보는게 주목적이니, 체결내역이 많이 쌓일수록 변동성을 파악하기 어려움.
문제(or 이전코드): *[21-05-07]해결완료* 그러나 삭제되는 주기, 수량등의 수치조절이 필요함.

코인검색 input, clear등 UI만 잡아둠.
 - clear는 작업완료 => 클릭하면 클리어버튼이 보이고 아웃포커스될때 클리어버튼이 사라지게
문제(or 이전코드): *[21-05-07]해결완료* 검색 기능 완성시켜야함

*해결완료* 단위 문제해결 필요
 - 체결그래프 볼륨레이블의 단위를 볼륨필터/코인가격(Volume) 기준으로 정함
  Volume > 1000000 = 'M'
  Volume > 1000 = 'K'



[ 21-05-05 작업내역 ]
코인리스트 아이템의 삭제기능(삭제는아직 기능만구현)
 - 코인리스트의 아이템 갱신 재귀함수를 담아둘 Map을 추가, 수정과 삭제할 때 해당 함수를 중지시켜야하므로. 갱신타이머를 담는것도 포함.
   Map에 넣는 이유는 코인이름와 매칭시키기 위해서.
 - tradeTimerMap, updateTimerMap
 - *해결필요* 리스트의 아이템 삭제기능

코인의 TotalVolume, BidVolume 저장하는 방식변경
문제(or 이전코드): '코인이름BidVolume', '코인이름TotalVolume'이런식으로 맵에 넣어서 사용했었음.
 - 해결완료 => coin이라는 객체를 만들고, 거기에 정보를 담은 다음 코인이름을 키값으로, coin객체를 값으로 넣는 방식으로 변경.
              coin(name, price, bidVolume, totalVolume)
              ㄴ> Map('코인이름', coin)
              * 체결테이블의 경우는 Map('코인이름'+'Table', coin) 형식으로 넣어서 사용.

infoToggle과 coinList의 그리드구조 변경
문제(or 이전코드): 클릭하면 그 아이템에 infoToggle을 붙이고 크기를 키웠는데, 배치하기가 어려움
 - *[21-05-06]해결완료* => infoToggle을 다시 고정형으로 변경함 div를 반으로 나누어 왼쪽은 체결테이블 및 상세내용, 오른쪽은 리스트.

체결내역에 금액별 거래량필터
 - 필터설정금액(현재 10만원) / 코인가격 이상의 Volume만 출력되도록 설정함
문제(or 이전코드): Volume필터의 단위가 변동성이 있어 단위를 표시하는데 문제가있음[ex) 100k, 10m 등..]
 - *[21-05-06]해결완료* 단위 문제해결 필요

코인리스트 세부정보 채워넣기
 - infoToggle(코인상세정보)에 차트를 추가함.
문제(or 이전코드): 조회 시점까지의 정보만 출력됨. 이후 실시간정보도 ticker라는 업비트 API와 현재 시간을 계산하여 Timer를 통해 갱신해줄 수 있을 것 같음.
 - *해결필요* 차트가 조회 시점까지의 정보만 출력되므 실시간정보도 추가 필요할 것 같음.

코인리스트에 아이템 추가시 중복인지 체크
 - *[21-05-06]해결완료* => tradeTimerMap.get(Cname) === undefined인 경우에만 기능이 작동하도록 ===은 내용과 데이터타입이 모두 동일할때만 True를 반환함.

[ 21-05-04 작업내역 ]
TOTAL과 BID의 체결량 그래프를 나타내줄 변수.
문제(or 이전코드): 코인이름에따라 변수명이 달라짐. 하지만 변수선언할 때 이름에 변수를 사용 할 수 없음.
 - *[21-05-06]해결완료* => map을 활용해 변수명대신 키값으로 사용. 키값에는 변수를 사용할 수 있음.

코인리스트 여러개 출력
- 컨트롤러에서 사용자가 지정해둔 코인들의 리스트를 받아 addItem, setItem, addListItem함수를 이용해 출력.
문제(or 이전코드): 리스트에 중복되는 아이템이 들어가는걸 막지못했음.

헤더,풋터 틀잡기
 - 작업완료

리스트의 코드 간소화, 리스트 아이템의 토글기능
 - coinList안에 미리 넣어두었던 coin1 coin2... 같은 html을 다 비움
 - infoToggle을 분리함 => toggleStat변수선언 초기값false, 한번이라도 infoToggle이 사용되면 그 이후로는 true로 변경시킴
    => coinItem에서 분리했기 때문에 처음동작시 클래스명변경 등의 기능이 작동하면 안되기때문에 toggleStat을 사용한것.

[ 21-05-03 작업내역 ]
체결내역의 비교방식변경.
문제(or 이전코드): 체결시간, 볼륨과 비교해 같은 주문인지 확인.
 - 체결내역에 고유한 ID가 있었음 그걸 이용해 비교.

ajax를 통해 체결내역을 받아오는 함수
문제: ajax를 많이 사용하는데 그때마다 같은내용을 써야함
 - 함수를 새로 만들어 공통적으로 사용할 수 있도록함, 기존 함수에서는 ajax제거.[21-05-03해당작업 완료]

체결내역을 받아오는 ajax 함수화
문제: 체결내역을 받아오는 ajax를 사용한 함수에서 다른 함수로 return을 보낼 때 undefined이 출력된다.
 - ajax 통신방식(async)의 기본값은 true인데 이는 비동기식이다. 동기식으로 처리하지 않으면 ajax의 결과값을 받아오기 전에 return을 해버리므로 undefined이 출력되던 것.
 - 여러 코인의 정보를 ajax를 통해 가져와야하므로, 따로 함수를 만들고 async를 false로 설정해 동기식으로 변경.


*새로 알게 된 정보*
-css를 분리시켜둔경우 수정후 바로 적용되지 않을 수 있다. 이는 브라우저 캐시에서 읽기때문이다.
따라서 브라우저가 새로운css라고 인식하도록 뒤에?after같은 문자열을 붙인다 꼭after일 필요는없이 문자가 붙으면 된다. 

배포할때는 적용안되지만 CTRL+SHIF+R을 하면 캐시까지 초기화하는 새로고침이 된다.

-Gitray - github에서 URL만 따서 붙여넣으면 소스를 볼수있는것